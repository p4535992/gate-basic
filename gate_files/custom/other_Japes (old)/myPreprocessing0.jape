/*
*  preprocessing0.jape
*
* La Fase (Phase preprocessing0) serve solo a caricare le macro e le liste all'inizio per evitare che diano noia alle successive regole JAPE
* per il problema derivante dalla collisione delle fasi delle varie regole Jape, notare che le macro definite qui possono essere chiamate dalla succesive fasi
* delle regole jape
*/
Phase: preprocessing0
Input: Lookup Location Split SpaceToken Token 
indirizzo iva geo  Address email  azienda assicurazione industriale universita regioni provincie telefono localita 
h1 h2 h3 h4 h5 h6 title head footer body 
Options: control = appelt
Macro:PROVINCIE(({Lookup.majorType==provincie}))
Macro:REGIONI(({Lookup.majorType==regioni}))
Macro:AZIENDA(({Lookup.majorType==azienda}))	  
Macro:INDUSTRIALE(({Lookup.majorType==industriale}))
Macro:ASSICURAZIONE(({Lookup.majorType==assicurazione}))
Macro:UNIVERSITA(({Lookup.majorType==universita}))
Macro:IVA(({Lookup.majorType==iva})({Split}|{SpaceToken}|{Token})[0,1])
Macro:INDIRIZZO(({Lookup.majorType==indirizzo}))
Macro:LOCALITA(({Lookup.majorType==localita}))
Macro:TELEFONO(({Lookup.majorType==telefono}))
Macro:GEO(({Lookup.majorType==geo}|{regioni}|{provincie}))
Macro:H1(({Lookup.majorType==h1}))
Macro:H2(({Lookup.majorType==h2}))
Macro:H3(({Lookup.majorType==h3}))
Macro:H4(({Lookup.majorType==h4}))
Macro:H5(({Lookup.majorType==h5}))
Macro:H6(({Lookup.majorType==h6}))
Macro:TITLE(({Lookup.majorType==title}))
Macro:HEAD(({Lookup.majorType==head}))
Macro:FOOTER(({Lookup.majorType==footer}))
Macro:KEYWORD_HTML(
    (
	{azienda}|
	{assicurazione}|
	{industriale}|
	{universita}|
	{regioni}|
	{provincie}|
	{indirizzo}
	)
	({Split}|{SpaceToken}|{Token})[0,1]
)
Macro:KEYWORD(
    (
    {azienda}|
	{assicurazione}|
	{industriale}|
	{universita}|
	{regioni}|
	{provincie}|
	{indirizzo} 
	)
	({Split}|{SpaceToken}|{Token})[0,1]
)
/*
Rule: Preprocess0_annSet
(
({Token})
):p0_annSet
--> 
 { 
   gate.AnnotationSet  MyAnnotationSet = new gate.AnnotationSet("MyAnnotation");
   MyAnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("p0_annSet");   
   gate.FeatureMap newFeatures= Factory.newFeatureMap();
   newFeatures.put("rule","Preprocess0_annSet");
   outputAS.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"MyAnnSet", newFeatures);
 }
*/

Rule: Preprocess0_azienda
(({Lookup.majorType==azienda})):p0_azienda
--> :p0_azienda.Temp ={kind ="p0_azienda", rule = Preprocess0_azienda }

Rule: Preprocess0_assicurazione
(({Lookup.majorType==assicurazione})):p0_assicurazione
--> :p0_assicurazione.Temp ={kind ="p0_assicurazione", rule = Preprocess0_assicurazione }
    
Rule: Preprocess0_industriale
(({Lookup.majorType==industriale})):p0_industriale
--> :p0_industriale.Temp ={kind ="p0_industriale", rule = Preprocess0_industriale }

Rule: Preprocess0_universita
(({Lookup.majorType==universita})):p0_universita
--> :p0_universita.Temp ={kind ="p0_universita", rule = Preprocess0_universita }
/* 
Rule: Preprocess0_regioni
(({Lookup.majorType==regioni})):p0_regioni
--> :p0_regioni.RegioniSupport ={kind ="p0_regioni", rule = Preprocess0_regioni }
 
 Rule: Preprocess0_provincie
(({Lookup.majorType==provincie})):p0_provincie
--> :p0_provincie.ProvincieSupport ={kind ="p0_provincie", rule = Preprocess0_provincie }

Rule: Preprocess0_iva
(({Lookup.majorType==iva})):p0_iva
--> :p0_iva.IvaSupport ={kind ="p0_iva", rule = Preprocess0_iva }
 
 Rule: Preprocess0_indirizzo
(({Lookup.majorType==indirizzo})):p0_indirizzo
--> :p0_indirizzo.IndirizzoSupport ={kind ="p0_indirizzo", rule = Preprocess0_indirizzo }
 
 Rule: Preprocess0_telefono
(({Lookup.majorType==telefono})):p0_telefono
--> :p0_telefono.TelefonoSupport ={kind ="p0_telefono", rule = Preprocess0_telefono }
 
 Rule: Preprocess0_localita
(({Lookup.majorType==localita})):p0_localita
--> :p0_localita.LocalitaSupport ={kind ="p0_localita", rule = Preprocess0_localita}
 
Rule: Preprocess0_email
(({Lookup.majorType==email})):p0_email
--> :p0_email.EmailSupport ={kind ="p0_email", rule = Preprocess0_email}
*/
Rule: Preprocess0_word
(({Token.kind==word})):p0_word
--> :p0_word.myWord ={kind ="p0_word", rule = Preprocess0_word}

/////////////////////////////////////////////////////////////////////////////////////////
 /*
 Rule: Preprocess0_h1
((Token within {h1})):p0_h1
--> :p0_h1.myH1 ={kind ="p0_h1", rule = Preprocess0_h1 }
 
 Rule: Preprocess0_h2
((Token within {h2})):p0_h2
--> :p0_h2.myH2 ={kind ="p0_h2", rule = Preprocess0_h2 }
 
 Rule: Preprocess0_h3
((Token within {h3})):p0_h3
--> :p0_h3.myH3 ={kind ="p0_h3", rule = Preprocess0_h3 }
 
 Rule: Preprocess0_h4
((Token within {h4})):p0_h4
--> :p0_h4.myH4 ={kind ="p0_h4", rule = Preprocess0_h4 }
 
 Rule: Preprocess0_h5
((Token within {h5})):p0_h5
--> :p0_h5.myH5 ={kind ="p0_h5", rule = Preprocess0_h5 }
 
 Rule: Preprocess0_h6
((Token within {h6})):p0_h6
--> :p0_h6.myH6 ={kind ="p0_h6", rule = Preprocess0_h6 }
 
 Rule: Preprocess0_title
((Token within {title})):p0_title
--> :p0_title.myTitle ={kind ="p0_title", rule = Preprocess0_title }
 
 Rule: Preprocess0_head
((Token within {head})):p0_head
--> :p0_head.myHead ={kind ="p0_head", rule = Preprocess0_head}
 
 Rule: Preprocess0_footer
((Token within {footer})):p0_footer
--> :p0_footer.myFooter ={kind ="p0_footer", rule = Preprocess0_footer}
 
 Rule: Preprocess0_body
((Token within {body})):p0_body
--> :p0_body.myBody ={kind ="p0_body", rule = Preprocess0_body}
 */









